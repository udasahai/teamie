{"changed":true,"filter":false,"title":"track.js","tooltip":"/routes/track.js","value":"var express = require('express');\nvar router = express.Router();\nvar mysql = require('mysql');\nvar db = require('../db.js');\nvar funcs = require('../controllers/trackController')\nconst timeout = 1200 //time out in seconds \n\n\n/* GET users listing. */\nrouter.get('/', (req, res, next) => {\n\n    let query_string = `SELECT * FROM ??`;\n    let table_name = req.query.table;\n\n    async function getResult() {\n        let result = await db.query(query_string, [table_name]);\n        return result;\n    }\n\n    getResult().then(result => {\n        res.status(200);\n        res.send({\n            status: \"ok\",\n            rows: result\n        })\n    }).catch(e => {\n        res.status(500);\n        res.send({\n            status: \"fail\"\n        })\n    })\n\n})\n\nrouter.post('/', function(req, res, next) {\n\n    //console.log(funcs);\n\n\n    funcs.insertNewPing(req)\n        .then(insertId => funcs.getPreviousPing(insertId))\n        .then(props => funcs.fillCumalativeTablesParallel(props))\n        .then(() => {\n            res.status(200);\n            res.json({ status: \"ok\" })\n        })\n        .catch(e => {\n            console.error(e)\n            res.status(500);\n            res.json({\n                status: \"failed\",\n                error: e\n            })\n        });\n\n\n\n\n\n});\n\nmodule.exports = router;\n","undoManager":{"mark":-2,"position":1,"stack":[[{"start":{"row":26,"column":19},"end":{"row":26,"column":20},"action":"remove","lines":["4"],"id":673}],[{"start":{"row":26,"column":19},"end":{"row":26,"column":20},"action":"insert","lines":["5"],"id":674}]]},"ace":{"folds":[],"scrolltop":41,"scrollleft":0,"selection":{"start":{"row":26,"column":20},"end":{"row":26,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":12,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1585459983650}